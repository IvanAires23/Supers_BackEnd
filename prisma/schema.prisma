// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  image     String
  heroName  String      @unique
  email     String      @unique
  password  String
  name      String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Session   Session[]
  Post      Post[]
  Coment    Coment[]
  Followers Followers[]

  @@map("users")
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id          Int         @id @default(autoincrement())
  description String
  userId      Int
  User        User        @relation(fields: [userId], references: [id])
  heroName    String
  imagePost   String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  Coment      Coment[]
  Followers   Followers[]

  @@map("posts")
}

model Coment {
  id          Int      @id @default(autoincrement())
  imagePerfil String
  description String
  userId      Int
  User        User     @relation(fields: [userId], references: [id])
  postId      Int
  Post        Post     @relation(fields: [postId], references: [id])
  heroName    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Followers {
  id          Int      @id @default(autoincrement())
  followerId  Int
  followingId Int
  userId      Int
  User        User     @relation(fields: [userId], references: [id])
  postId      Int
  Post        Post     @relation(fields: [postId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("followers")
}
